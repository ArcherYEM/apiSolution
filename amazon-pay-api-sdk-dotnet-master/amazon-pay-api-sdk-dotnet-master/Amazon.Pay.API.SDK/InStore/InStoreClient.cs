using Amazon.Pay.API.InStore.Charge;
using Amazon.Pay.API.InStore.Interfaces;
using Amazon.Pay.API.InStore.MerchantScan;
using Amazon.Pay.API.InStore.Refund;
using Amazon.Pay.API.Types;
using System.Collections.Generic;

namespace Amazon.Pay.API.InStore
{
    public class InStoreClient : Client, IInStoreClient
    {
        public InStoreClient(ApiConfiguration payConfiguration) : base(payConfiguration)
        {

        }

        /// <summary>
        /// Informs Amazon Pay that a buyer wants to initiate a purchase with a merchant.
        /// </summary>
        /// <param name="scanRequest"></param>
        /// <param name="headers"></param>
        /// <returns>AmazonPayResponse response</returns>
        public MerchantScanResponse MerchantScan(MerchantScanRequest scanRequest, Dictionary<string, string> headers = null)
        {
            var scanUri = apiUrlBuilder.BuildFullApiPath(Constants.ApiServices.InStore, Constants.Resources.InStore.MerchantScan);
            var apiRequest = new ApiRequest(scanUri, HttpMethod.POST, scanRequest, headers);
            var result = CallAPI<MerchantScanResponse>(apiRequest);

            return result;
        }

        /// <summary>
        /// Charges the buyer using the ChargePermission generated by the MerchantScan call.
        /// </summary>
        /// <param name="chargeRequest"></param>
        /// <param name="headers"></param>
        /// <returns>AmazonPayResponse response</returns>
        public ChargeResponse Charge(CreateChargeRequest chargeRequest, Dictionary<string, string> headers = null)
        {
            var chargeUri = apiUrlBuilder.BuildFullApiPath(Constants.ApiServices.InStore, Constants.Resources.InStore.Charge);
            var apiRequest = new ApiRequest(chargeUri, HttpMethod.POST, chargeRequest, headers);
            var result = CallAPI<ChargeResponse>(apiRequest);

            return result;
        }

        /// <summary>
        /// Refunds the given amount for the given charge.
        /// </summary>
        /// <param name="refundRequest"></param>
        /// <param name="headers"></param>
        /// <returns>AmazonPayResponse response</returns>
        public RefundResponse Refund(CreateRefundRequest refundRequest, Dictionary<string, string> headers = null)
        {
            var refundUri = apiUrlBuilder.BuildFullApiPath(Constants.ApiServices.InStore, Constants.Resources.InStore.Refund);
            var apiRequest = new ApiRequest(refundUri, HttpMethod.POST, refundRequest, headers);
            var result = CallAPI<RefundResponse>(apiRequest);

            return result;
        }
    }
}
